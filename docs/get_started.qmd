---
title: Get started with polarstate
jupyter: python3
---

```{python}
import polars as pl
from polarstate.aj import aalen_johansen
```

# Get starteds with polarstate

::: {.panel-tabset}


## lifelines

```{python}

from lifelines import AalenJohansenFitter
from lifelines.datasets import load_waltons
T, E = load_waltons()['T'], load_waltons()['E']
ajf = AalenJohansenFitter(calculate_variance=True)
ajf.fit(T, E, event_of_interest=1)
ajf.cumulative_density_


```

## polarstate

```{python}

from lifelines import AalenJohansenFitter
from lifelines.datasets import load_waltons
from polarstate.aj import group_reals_by_times, add_events_at_times_column, add_at_risk_column


T, E = load_waltons()['T'], load_waltons()['E']

times_and_reals = pl.DataFrame({
        "times": T,
        "reals": E
    })

times_and_counts = group_reals_by_times(times_and_reals)
events_data = add_events_at_times_column(times_and_counts)
result = add_at_risk_column(events_data)

print(result)
```

:::

# Polarstate 

```{python}
times = pl.Series([1, 2, 3, 4, 5])
reals = pl.Series([1, 0, 2, 1, 0])

result = aalen_johansen(times, reals)



print(result)

```